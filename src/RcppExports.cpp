// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcppExpandKronecker
arma::cube rcppExpandKronecker(arma::mat x, int n);
RcppExport SEXP bayesVAR_rcppExpandKronecker(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppExpandKronecker(x, n));
    return rcpp_result_gen;
END_RCPP
}
// rcppZHZ
arma::mat rcppZHZ(arma::cube Z, arma::mat H);
RcppExport SEXP bayesVAR_rcppZHZ(SEXP ZSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppZHZ(Z, H));
    return rcpp_result_gen;
END_RCPP
}
// rcppZHy
arma::mat rcppZHy(arma::cube Z, arma::mat H, arma::mat y);
RcppExport SEXP bayesVAR_rcppZHy(SEXP ZSEXP, SEXP HSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcppZHy(Z, H, y));
    return rcpp_result_gen;
END_RCPP
}
// rcppZHy_TVP
arma::mat rcppZHy_TVP(arma::cube Z, arma::mat H, arma::mat y, arma::mat beta);
RcppExport SEXP bayesVAR_rcppZHy_TVP(SEXP ZSEXP, SEXP HSEXP, SEXP ySEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppZHy_TVP(Z, H, y, beta));
    return rcpp_result_gen;
END_RCPP
}
// rcppZHy_FAVAR
arma::mat rcppZHy_FAVAR(arma::mat Z, arma::mat H, arma::mat y, arma::mat beta);
RcppExport SEXP bayesVAR_rcppZHy_FAVAR(SEXP ZSEXP, SEXP HSEXP, SEXP ySEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppZHy_FAVAR(Z, H, y, beta));
    return rcpp_result_gen;
END_RCPP
}
// rcppSSE
arma::mat rcppSSE(arma::mat y, arma::cube Z, arma::colvec beta);
RcppExport SEXP bayesVAR_rcppSSE(SEXP ySEXP, SEXP ZSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppSSE(y, Z, beta));
    return rcpp_result_gen;
END_RCPP
}
// rcppSSEmat
arma::mat rcppSSEmat(arma::mat y, arma::cube Z, arma::mat beta);
RcppExport SEXP bayesVAR_rcppSSEmat(SEXP ySEXP, SEXP ZSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppSSEmat(y, Z, beta));
    return rcpp_result_gen;
END_RCPP
}
// rcppResidConstB
arma::mat rcppResidConstB(arma::mat y, arma::cube Z, arma::rowvec beta);
RcppExport SEXP bayesVAR_rcppResidConstB(SEXP ySEXP, SEXP ZSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppResidConstB(y, Z, beta));
    return rcpp_result_gen;
END_RCPP
}
// rcppDrawBeta_CC
arma::mat rcppDrawBeta_CC(arma::mat y, arma::cube Z, arma::cube H, arma::cube Q, arma::mat Pi, arma::rowvec beta1, arma::mat P1);
RcppExport SEXP bayesVAR_rcppDrawBeta_CC(SEXP ySEXP, SEXP ZSEXP, SEXP HSEXP, SEXP QSEXP, SEXP PiSEXP, SEXP beta1SEXP, SEXP P1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P1(P1SEXP);
    rcpp_result_gen = Rcpp::wrap(rcppDrawBeta_CC(y, Z, H, Q, Pi, beta1, P1));
    return rcpp_result_gen;
END_RCPP
}
// rcppDrawBeta_CC2
arma::mat rcppDrawBeta_CC2(arma::mat y, arma::cube Z, arma::cube H, arma::cube Q, arma::mat Pi, arma::rowvec beta1, arma::mat P1);
RcppExport SEXP bayesVAR_rcppDrawBeta_CC2(SEXP ySEXP, SEXP ZSEXP, SEXP HSEXP, SEXP QSEXP, SEXP PiSEXP, SEXP beta1SEXP, SEXP P1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P1(P1SEXP);
    rcpp_result_gen = Rcpp::wrap(rcppDrawBeta_CC2(y, Z, H, Q, Pi, beta1, P1));
    return rcpp_result_gen;
END_RCPP
}
// rcppKalmanFilterSmooth
arma::mat rcppKalmanFilterSmooth(arma::mat y, arma::cube Z, arma::cube H, arma::cube Q, arma::mat Pi, arma::rowvec beta1, arma::mat P1);
RcppExport SEXP bayesVAR_rcppKalmanFilterSmooth(SEXP ySEXP, SEXP ZSEXP, SEXP HSEXP, SEXP QSEXP, SEXP PiSEXP, SEXP beta1SEXP, SEXP P1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P1(P1SEXP);
    rcpp_result_gen = Rcpp::wrap(rcppKalmanFilterSmooth(y, Z, H, Q, Pi, beta1, P1));
    return rcpp_result_gen;
END_RCPP
}
// rcppDrawBeta_DK
arma::mat rcppDrawBeta_DK(arma::mat y, arma::cube Z, arma::cube H, arma::cube Q, arma::mat Pi, arma::rowvec beta1, arma::mat P1);
RcppExport SEXP bayesVAR_rcppDrawBeta_DK(SEXP ySEXP, SEXP ZSEXP, SEXP HSEXP, SEXP QSEXP, SEXP PiSEXP, SEXP beta1SEXP, SEXP P1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P1(P1SEXP);
    rcpp_result_gen = Rcpp::wrap(rcppDrawBeta_DK(y, Z, H, Q, Pi, beta1, P1));
    return rcpp_result_gen;
END_RCPP
}
// rcppIRF
arma::field<arma::cube> rcppIRF(arma::cube B, arma::cube H, int R, bool orthogonal);
RcppExport SEXP bayesVAR_rcppIRF(SEXP BSEXP, SEXP HSEXP, SEXP RSEXP, SEXP orthogonalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< bool >::type orthogonal(orthogonalSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppIRF(B, H, R, orthogonal));
    return rcpp_result_gen;
END_RCPP
}
// rcppMakeRegs
arma::cube rcppMakeRegs(arma::mat y, int p);
RcppExport SEXP bayesVAR_rcppMakeRegs(SEXP ySEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppMakeRegs(y, p));
    return rcpp_result_gen;
END_RCPP
}
// rcppPredictiveSim_TVP
arma::cube rcppPredictiveSim_TVP(arma::mat starting_Y, arma::mat B, arma::cube H, arma::cube Q, int T);
RcppExport SEXP bayesVAR_rcppPredictiveSim_TVP(SEXP starting_YSEXP, SEXP BSEXP, SEXP HSEXP, SEXP QSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type starting_Y(starting_YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Q(QSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppPredictiveSim_TVP(starting_Y, B, H, Q, T));
    return rcpp_result_gen;
END_RCPP
}
// rcppPredictiveSim_FTVP
arma::cube rcppPredictiveSim_FTVP(arma::mat starting_Y, arma::mat B, arma::cube H, arma::cube Q, arma::cube L, arma::cube R, int T, int k);
RcppExport SEXP bayesVAR_rcppPredictiveSim_FTVP(SEXP starting_YSEXP, SEXP BSEXP, SEXP HSEXP, SEXP QSEXP, SEXP LSEXP, SEXP RSEXP, SEXP TSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type starting_Y(starting_YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppPredictiveSim_FTVP(starting_Y, B, H, Q, L, R, T, k));
    return rcpp_result_gen;
END_RCPP
}
// rcppRmvnorm
arma::mat rcppRmvnorm(int n, arma::colvec mu, arma::mat sigma);
RcppExport SEXP bayesVAR_rcppRmvnorm(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppRmvnorm(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
